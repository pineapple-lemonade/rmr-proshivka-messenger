plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.4'
    id "org.sonarqube" version "3.4.0.2513"
    id 'jacoco'
}

group = 'ru.ruzavin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('testcontainersVersion', "1.17.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'

    implementation 'com.auth0:java-jwt:3.19.2'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    liquibaseRuntime('org.liquibase:liquibase-core:4.9.0')
    liquibaseRuntime('org.postgresql:postgresql:42.3.3')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'ru/ruzavin/rmrproshivkamessenger/aspect',
                    'ru/ruzavin/rmrproshivkamessenger/api',
                    'ru/ruzavin/rmrproshivkamessenger/client',
                    'ru/ruzavin/rmrproshivkamessenger/config',
                    'ru/ruzavin/rmrproshivkamessenger/dto',
                    'ru/ruzavin/rmrproshivkamessenger/entity',
                    'ru/ruzavin/rmrproshivkamessenger/exception',
                    'ru/ruzavin/rmrproshivkamessenger/handler',
                    'ru/ruzavin/rmrproshivkamessenger/mapper',
                    'ru/ruzavin/rmrproshivkamessenger/security'
            ])
        }))
    }
}